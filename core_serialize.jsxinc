// core_serialize.jsxinc (panel-safe JSON + helpers)

// Lightweight JSON fallback for ExtendScript environments without JSON.stringify/parse
var JSONX = (function(){
    function escStr(s){
        s = String(s);
        return '"' + s.replace(/\\/g,'\\\\').replace(/\\"/g,'\\"').replace(/\n/g,'\\n').replace(/\r/g,'\\r') + '"';
    }
    function stringify(v){
        var t = typeof v;
        if (v === null) return "null";
        if (t === "number"){ if (!isFinite(v)) return "null"; return String(v); }
        if (t === "boolean") return String(v);
        if (t === "string")  return escStr(v);
        if (v instanceof Array){
            var a=[]; for (var i=0;i<v.length;i++) a.push(stringify(v[i]));
            return "["+a.join(",")+"]";
        }
        if (t === "object"){
            var k, a=[];
            for (k in v){
                if (v.hasOwnProperty(k) && typeof v[k] !== "undefined"){
                    a.push(escStr(k)+":"+stringify(v[k]));
                }
            }
            return "{"+a.join(",")+"}";
        }
        return "null";
    }
    function parse(s){
        if ($.global.JSON && $.global.JSON.parse) return $.global.JSON.parse(s);
        return eval("(" + s + ")");
    }
    return {
        stringify: function(o){ return ($.global.JSON && $.global.JSON.stringify) ? $.global.JSON.stringify(o) : stringify(o); },
        parse: parse
    };
})();


function serializeOneProp(prop){
    if (!prop) return null;
    var data = { isKeyframed: false };
    try {
        if (prop.numKeys && prop.numKeys > 0){
            data.isKeyframed = true;
            data.keys = [];
            for (var k=1;k<=prop.numKeys;k++){
                data.keys.push([ prop.keyTime(k), prop.keyValue(k) ]);
            }
        } else {
            data.value = prop.value;
        }
    } catch(e){ try{ data.value = prop.value; }catch(_){ data.value = null; } }
    return data;
}

function applyOneProp(prop, data){
    if (!prop || !data) return;
    try {
        if (data.isKeyframed && data.keys && data.keys.length){
            for (var i=prop.numKeys; i>=1; i--) prop.removeKey(i);
            for (var j=0;j<data.keys.length;j++){
                var kv = data.keys[j];
                prop.setValueAtTime(kv[0], kv[1]);
            }
        } else if (data.hasOwnProperty("value")){
            prop.setValue(data.value);
        }
    } catch(e){}
}

function safeNumber(v){ return (typeof v === "number" && isFinite(v)) ? v : undefined; }

function safeArray(arr){
    if (!(arr instanceof Array)) return undefined;
    var out=[];
    for (var i=0;i<arr.length;i++){
        var n = (typeof arr[i] === "number" && isFinite(arr[i])) ? arr[i] : undefined;
        if (typeof n === "undefined") return undefined;
        out.push(n);
    }
    return out;
}

function trimRGB(v){
    if (!(v instanceof Array)) return v;
    if (v.length >= 3) return [v[0], v[1], v[2]];
    return v;
}

/* --- export JSON helper to global (panel-safe) --- */
try { if (!$.global.JSONX) $.global.JSONX = JSONX; } catch (e) { /* no-op */ }
/* --- end export --- */
/* --- export helpers to global (panel-safe) --- */
try {
    if (!$.global.JSONX) $.global.JSONX = JSONX;

    $.global.serializeOneProp = serializeOneProp;
    $.global.applyOneProp     = applyOneProp;
    $.global.safeNumber       = safeNumber;
    $.global.safeArray        = safeArray;
    $.global.trimRGB          = trimRGB;
} catch (e) { /* no-op */ }
/* --- end export --- */
